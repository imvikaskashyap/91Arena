@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap');
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
 
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
 
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
 
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
 
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
 
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;
 
    --radius: 0.5rem;
  }
 
  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
 
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
 
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
 
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
 
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
 
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
 
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
 
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}



/* <uniquifier>: Use a unique and descriptive class name
<weight>: Use a value from 200 to 900
 <width>: Use a value from 50 to 200 */

/* .inconsolata-<uniquifier> {
  font-family: "Inconsolata", monospace;
  font-optical-sizing: auto;
  font-weight: <weight>;
  font-style: normal;
  font-variation-settings:
    "wdth" <width>;
} */


 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-family: "Oswald", sans-serif;
    font-optical-sizing: auto;
    font-weight: 500;
    font-style: normal;
  }
}

body {
  font-family: "Oswald", sans-serif;
  font-optical-sizing: auto;
  font-weight: 500;
  font-style: normal;
}

.borderCss{
  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
  border-radius: calc(var(--radius) - 4px);
}



.box{
  transition: box-shadow .3s;
   border-radius:10px;
  border: 1px solid #ccc;
  /* background: #fff; */
  float: left;
}

.box:hover {
  box-shadow: 0 0 11px rgba(33,33,33,.2); 
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  margin-left: 0;
  margin-right: 0;
}

.space-x-4 > :not([hidden]) ~ :not([hidden]){
  margin-left: 0;
  margin-right: 0;
}
/* Hide the tooltip by default */
.tooltipText {
  visibility: hidden;
  opacity: 0;
  width: max-content;
  background-color: #333;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px;
  position: absolute;
  z-index: 1;
  bottom: 125%; /* Position above the icon */
  left: 50%;
  transform: translateX(-50%);
  transition: opacity 0.2s;
  font-size: 12px; /* Adjust font size */
}

/* Tooltip arrow */
.tooltipText::after {
  content: "";
  position: absolute;
  top: 100%; /* At the bottom of the tooltip */
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #333 transparent transparent transparent;
}

/* Show the tooltip when hovering over the icon */
.hoverTooltip:hover .tooltipText {
  visibility: visible;
  opacity: 1;
}

/* Additional styling for the icon container if needed */
.icon-container {
  display: flex;
  gap: 10px; /* Space between icons */
  position: relative;
}

.slick-prev:before, .slick-next:before {
  font-family: 'slick';
  font-size: 20px;
  line-height: 1;
  opacity: .75;
  color: #111111;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.two h2 {
  text-transform: capitalize;
}
.two h2:before {
  width: 28px;
  height: 5px;
  display: block;
  content: "";
  position: absolute;
  margin-left: 9px;
  background-color: #b80000;
  

}
.bottomLine h2:before {
  width: 100%;
  height: 4px;
  display: block;
  content: "";
  position: relative;
   background-color: #b80000;
  

}

.specTitle{
  font-size: 20px;
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: 1px;
  line-height: 1em;
  /* color: rgba(0, 0, 0, 0.4); */
}

.specDetails{
  font-size: 14px;
  font-weight: 800;
  text-transform: uppercase;
  /* letter-spacing: 1px; */
  line-height: 1em;
  /* color: rgba(0, 0, 0, 0.4); */
}
.alt-two h2 {
  text-align:center;
}
.alt-two h2:before {
  left:50%; margin-left:-30px;
}


.h_tag {
  font-size: 1.25rem;
  font-family: var(--font-title);
  color: black;
  line-height: 1.1;
}

.p_tag {
  font-family: var(--font-text);
  font-size: 1rem;
  line-height: 1.5;
  /* color: var(--white); */
}

.flow > * + * {
  margin-top: 5px;
}


.card {
  display: grid;
  width: 200px;
  max-width: 300px;
  height: 200px;
  overflow: hidden;
  border-radius: 0.625rem;
  margin: 0 auto;
  
  /* box-shadow: 0.25rem 0.25rem 0.5rem rgba(0, 0, 0, 0.25); */
}

.card > * {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.card__background {
  object-fit: contain;
  max-width: 80%;
  height: 80%;
}

.card__content {
  --flow-space: 0.9375rem;
  display: flex;
  flex-direction: column;
  /* justify-content: space-between; */
  align-self: flex-end;
  height: 55%;
  /* padding: 1% 1.25rem 1.875rem; */
  background: #ffffffb1;
}

.card__content--container {
  --flow-space: 1.25rem;
}

.card__title {
  position: relative;
  width: fit-content;
  width: -moz-fit-content; /* Prefijo necesario para Firefox  */
}

.card__title::after {
  content: "";
  position: absolute;
  height: 0.3125rem;
  width: calc(100% + 1.25rem);
  bottom: calc((1.25rem - 0.5rem) * -1);
  left: -1.25rem;
  background-color: var(--brand-color);
}



@media (any-hover: hover) and (any-pointer: fine) {
  .card__content {
    transform: translateY(62%);
    transition: transform 500ms ease-out;
    transition-delay: 100ms;
  }

  .card__title::after {
    opacity: 0;
    transform: scaleX(0);
    transition: opacity 1ms ease-in, transform 1ms ease-out;
    transition-delay: 100ms;
    transform-origin: right;
  }

  .card__background {
    transition: transform 500ms ease-in;
  }

  .card__content--container > :not(.card__title),
  .card__button {
    opacity: 0;
    transition: transform 500ms ease-out, opacity 500ms ease-out;
  }

  .card:hover,
  .card:focus-within {
    transform: scale(1.05);
    transition: transform 100ms ease-in;
  }

  .card:hover .card__content,
  .card:focus-within .card__content {
    transform: translateY(0);
    transition: transform 500ms ease-in;
  }

  .card:focus-within .card__content {
    transition-duration: 0ms;
  }

  .card:hover .card__background,
  .card:focus-within .card__background {
    transform: scale(1.1);
  }

  .card:hover .card__content--container > :not(.card__title),
  .card:hover .card__button,
  .card:focus-within .card__content--container > :not(.card__title),
  .card:focus-within .card__button {
    opacity: 1;
    /* transition: opacity 500ms ease-in; */
    /* transition-delay: 1000ms; */
  }

  .card:hover .card__title::after,
  .card:focus-within .card__title::after {
    opacity: 1;
    transform: scaleX(1);
    transform-origin: left;
    transition: opacity 500ms ease-in, transform 500ms ease-in;
    transition-delay: 500ms;
  }
}
